name: Publish to crates.io

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Perform a dry run (--dry-run)'
        required: false
        default: false
        type: boolean

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.89.0
      
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ubuntu-latest-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ubuntu-latest-cargo-publish-
          ubuntu-latest-cargo-
          
    - name: Verify package metadata
      run: |
        echo "Package name: $(cargo pkgid | cut -d'#' -f2)"
        echo "Package version: $(cargo pkgid | cut -d'#' -f2 | cut -d'@' -f2)"
        cargo metadata --format-version 1 | jq '.packages[] | select(.name == "bws-web-server") | {name, version, description, license, repository}'
        
    - name: Check if version already exists on crates.io
      run: |
        PACKAGE_VERSION=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == "bws-web-server") | .version')
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
        
        if cargo search bws-web-server --limit 1 | grep -q "$PACKAGE_VERSION"; then
          echo "::error::Version $PACKAGE_VERSION already exists on crates.io"
          echo "Please update the version in Cargo.toml before publishing"
          exit 1
        else
          echo "Version $PACKAGE_VERSION is available for publishing"
        fi
        
    - name: Verify package can be built
      run: cargo build --release
      
    - name: Run tests
      run: cargo test --release
      
    - name: Package verification
      run: |
        cargo package --list --allow-dirty
        cargo package --allow-dirty
        
    - name: Dry run publish
      if: ${{ github.event.inputs.dry_run == 'true' }}
      run: |
        echo "üß™ Performing dry run..."
        cargo publish --dry-run --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        echo "‚úÖ Dry run completed successfully!"
        
    - name: Publish to crates.io
      if: ${{ github.event.inputs.dry_run != 'true' }}
      run: |
        echo "üöÄ Publishing to crates.io..."
        cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        echo "‚úÖ Successfully published to crates.io!"
        
    - name: Verify publication
      if: ${{ github.event.inputs.dry_run != 'true' }}
      run: |
        echo "üîç Waiting for crates.io to update..."
        sleep 30
        PACKAGE_VERSION=$(cargo pkgid | cut -d'#' -f2 | cut -d'@' -f2)
        if cargo search bws-web-server --limit 1 | grep -q "$PACKAGE_VERSION"; then
          echo "‚úÖ Package successfully published and indexed on crates.io"
          echo "üì¶ Install with: cargo install bws-web-server --version $PACKAGE_VERSION"
        else
          echo "‚ö†Ô∏è  Package published but may not be indexed yet (this is normal)"
          echo "üì¶ Install with: cargo install bws-web-server"
        fi
