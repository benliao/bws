name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.89.0
      with:
        components: rustfmt, clippy
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Build
      run: cargo build --verbose
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Test BWS binary and configuration validation
      run: |
        # Build BWS binary
        cargo build --bin bws
        
        # Test BWS binary help
        ./target/debug/bws --help
        
        # Test BWS version
        ./target/debug/bws --version
        
        # Test configuration validation with --dry-run
        echo "Testing configuration validation..."
        ./target/debug/bws --config config.toml --dry-run
        
        # Test invalid configuration handling
        echo "Testing invalid configuration handling..."
        echo "invalid toml content" > invalid.toml
        if ./target/debug/bws --config invalid.toml --dry-run 2>/dev/null; then
          echo "❌ Should have failed with invalid config"
          exit 1
        else
          echo "✅ Correctly rejected invalid configuration"
        fi
        
        echo "✅ BWS binary tests completed successfully"

    - name: Upload BWS binary artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: bws-binary-ubuntu-latest
        path: target/debug/bws
        retention-days: 7
        if-no-files-found: error

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.89.0
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: |
        # Run cargo audit and check for new vulnerabilities
        # Known accepted vulnerability: RUSTSEC-2024-0437 (protobuf via pingora)
        if ! cargo audit --ignore RUSTSEC-2024-0437; then
          echo "::error::New security vulnerabilities found beyond accepted ones"
          exit 1
        fi
        
        # Report on the known vulnerability status
        echo "::notice::Security audit complete. Known vulnerability RUSTSEC-2024-0437 is accepted and documented in SECURITY.md"

  cross_platform:
    name: Cross Platform Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [1.89.0, beta]
        exclude:
          # Reduce CI load by excluding some combinations
          - os: windows-latest
            rust: beta
          - os: macos-latest
            rust: beta
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.rust }}-cargo-
          
    - name: Build
      run: cargo build --verbose --bin bws
      
    - name: Run tests
      run: cargo test --verbose

    - name: Upload build artifacts
      if: success() && matrix.rust == '1.89.0'
      uses: actions/upload-artifact@v4
      with:
        name: bws-${{ matrix.os }}-${{ matrix.rust }}
        path: target/debug/bws*
        retention-days: 3
        if-no-files-found: error
