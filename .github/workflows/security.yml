name: Security

on:
  schedule:
    # Run security audit weekly on Mondays at 10:00 UTC
    - cron: '0 10 * * 1'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.89.0
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: |
        # Run cargo audit and check for new vulnerabilities
        # Known accepted vulnerability: RUSTSEC-2024-0437 (protobuf via pingora)
        if ! cargo audit --ignore RUSTSEC-2024-0437; then
          echo "::error::New security vulnerabilities found beyond accepted ones"
          exit 1
        fi
        
        # Report on the known vulnerability status
        echo "::notice::Security audit complete. Known vulnerability RUSTSEC-2024-0437 is accepted and documented in SECURITY.md"
      
    - name: Run cargo deny
      uses: EmbarkStudios/cargo-deny-action@v1
      with:
        log-level: warn
        command: check
        arguments: --all-features
        
  dependency_review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        config-file: './.github/dependency-review-config.yml'
